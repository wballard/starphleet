#!/usr/bin/env starphleet-launcher
### Usage:
###    starphleet-beta-groups
### --help
###
### Configure named beta group maps.
###

die_on_error
run_as_root_or_die

# Purge all beta groups and beta configs
[ -d "${NGINX_CONF}/beta_groups" ]  && rm -rf "${NGINX_CONF}/beta_groups"
# Try to remove beta files or.. exit happy if none exist
rm "${NGINX_CONF}"/published/*.beta || true

# Make the beta_group again
mkdir -p "${NGINX_CONF}/beta_groups"

#set a beta group if the remote user is in the list of beta users
for BETA_GROUP in $(find "${HEADQUARTERS_LOCAL}/beta_groups" -maxdepth 1 -type f)
do
  info beta group $(basename ${BETA_GROUP})
  #user authentication style
  BETA_GROUP_CONF="${NGINX_CONF}/beta_groups/$(basename ${BETA_GROUP}).conf"
  echo "  map \$remote_user \$starphleet_beta_$(basename ${BETA_GROUP}) {" >> "${BETA_GROUP_CONF}"
  echo "   default 0;" >> "${BETA_GROUP_CONF}"
  for BETA_USER in $(cat "${BETA_GROUP}" | sort | uniq)
  do
    echo "   ${BETA_USER} 1;" >> "${BETA_GROUP_CONF}"
  done
  echo "  }" >> "${BETA_GROUP_CONF}"
  #cookie style
  echo "  map \$cookie_${USER_IDENTITY_COOKIE} \$starphleet_beta_$(basename ${BETA_GROUP})_cookie  {" >> "${BETA_GROUP_CONF}"
  echo "   default 0;" >> "${BETA_GROUP_CONF}"
  for BETA_USER in $(cat "${BETA_GROUP}" | sort | uniq)
  do
    echo "   ${BETA_USER} 1;" >> "${BETA_GROUP_CONF}"
  done
  echo "  }" >> "${BETA_GROUP_CONF}"
done

# Go through all the orders and generate all the beta configs
for ORDERS_FILE in $(find "${HEADQUARTERS_LOCAL}" -maxdepth 2 | grep '/orders$')
do
  # Orders will contain BETAS as an array.. so we clear and declare
  # the BETAS variable as an associative array
  unset BETAS
  declare -A BETAS
  # Slurp in the beta configs for this orders file by running it
  run_orders "${ORDERS_FILE}"

  # Get only the 'name' of these orders
  ORDER_NAME=$(echo "${ORDERS_FILE}" | sed -e 's[/orders$[[' | sed -e "s[${HEADQUARTERS_LOCAL}/\?[[")
  # Beta config name
  BETA_CONF="${NGINX_CONF}/published/$(urlencode \"${ORDER_NAME}\").beta"

  for beta in "${!BETAS[@]}"
  do
    # Beta groups need a corresponding file with a list of users
    # for the beta.  If that file doesn't exist the following
    # will create variable references that don't exist.  We
    # check to see if the corresponding file is there before we
    # create the config and skip otherwise
    [ ! -f "${HEADQUARTERS_LOCAL}/beta_groups/${beta}" ] && continue
    echo "" > "${BETA_CONF}"
    echo "  if (\$starphleet_beta_${beta}) {" >> "${BETA_CONF}"
    echo "    rewrite ^/${ORDER_NAME}/(.*) ${BETAS[$beta]}/\$1 last;" >> "${BETA_CONF}"
    echo "  }" >> "${BETA_CONF}"
    echo "  if (\$starphleet_beta_${beta}_cookie) {" >> "${BETA_CONF}"
    echo "    rewrite ^/${ORDER_NAME}/(.*) ${BETAS[$beta]}/\$1 last;" >> "${BETA_CONF}"
    echo "  }" >> "${BETA_CONF}"
  done
done

starphleet-hup-nginx
