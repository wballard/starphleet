#!/usr/bin/env bash
### Usage:
###    starphleet-push-create <local_repo> <revision>
### --help
###
### Create a container from a local repository, used from a post push hook.
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source ${DIR}/tools
help=$(grep "^### " "$0" | cut -c 5-)
eval "$(${DIR}/docopts -h "$help" -V "$version" : "$@")"
container_name="${revision}"

function clean_up {
  info cleaning up
  starphleet-unpublish "/${container_name}"
  starphleet-lxc-destroy "${container_name}"
  rm -rf "${local_repo}"
  info bye!
  exit
}

trap clean_up HUP INT TERM EXIT

function top_level_parent_pid {
    # Look up the parent of the given PID.
    pid=${1:-$$}
    stat=($(</proc/${pid}/stat))
    ppid=${stat[3]}
    pname=${stat[1]}

    # /sbin/init always has a PID of 1, so if you reach that, the current PID is
    # the top-level parent. Otherwise, keep looking.
    if [[ ${ppid} -ne 1 ]] ; then
      top_level_parent_pid ${ppid}
    fi
}

info "making ${local_repo} into container ${container_name}"
# we need to get our .env file (if present) from within the contents
# of the repo, so we're gonna check out the repo and see if we've got
# an .env file
# first, a place to checkout our repo to
export CHECKOUT_PATH="${STARPHLEET_TMP}/${container_name}"
# make sure we don't have anything where we're gonna check things out
test -f "${CHECKOUT_PATH}"  && rm -rf "${CHECKOUT_PATH}"
git clone "${local_repo}" "${CHECKOUT_PATH}"
pushd "${CHECKOUT_PATH}" > /dev/null
git checkout "${revision}"
popd > /dev/null
#resource tools, we now have a cloned repository locally to pick up env
source ${DIR}/tools
info cleaning up existing push container
starphleet-lxc-destroy "${container_name}"
info making this push into a container
starphleet-containerize "${CHECKOUT_PATH}#${revision}" "${container_name}"
export PORT=$(cat "${STARPHLEET_PORTS}/${container_name}")

starphleet-publish "${container_name}" "${PORT}" "/${container_name}"

info starting your pushed container
lxc-attach --name ${container_name} -- sudo -H -u ${STARPHLEET_APP_USER} bash -c "setsid ~/start web"
while [ 1 ]; do
  sleep 1
  top_level_parent_pid
  if [ ${pname} != '(sshd)' ]; then
    exit 0
  fi
done
