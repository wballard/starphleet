#!/usr/bin/env starphleet-launcher
### Usage:
###    starphleet-install
### --help
###
### This will get starphleet on a base machine
run_as_root_or_die


#flush out caches, I know, I know -- but really if you don't do this
#Linux would rather swap than let go
sync && echo 3 > /proc/sys/vm/drop_caches

ec2_mounts

#put in the system overlay, gets all the files in place
#for the starphleet jobs
rm -f /etc/init/starphleet*
${SCRIPT_DIR}/perform-overlay

#source again, yep -- now the environment is in place
source ${DIR}/tools

#this is a provisioning script for the base system/host/vm
#run as root, with the starphleet source tree at /starphleet

#role account for folks acting as the admiral, do this really early
#as it will provide the home directory
make_admiral

mkdir -p "${LXC_ROOT}"
chmod 755 "${LXC_ROOT}"

#yep -- international, no fooling
echo "GMT" > /etc/timezone
dpkg-reconfigure -f noninteractive tzdata

hostname "${SHIP}"
echo "${SHIP}" > /etc/hostname
echo "127.0.0.1 ${SHIP} localhost" > /etc/hosts

# restart rsyslog for it to pick up new hostname
service rsyslog restart

#packages
debconf-set-selections <<< "postfix postfix/mailname string '${SHIP}'"
debconf-set-selections <<< "postfix postfix/main_mailer_type string 'Internet Site'"
apt-get -y install --force-yes software-properties-common

# Run Upgrade before before installing packages - which fixes this error
# https://github.com/lxc/lxc/issues/247
export DEBIAN_FRONTEND=noninteractive; apt-get dist-upgrade -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" --force-yes

apt-get -y install --force-yes $(< "${DIR}/packages")

pushd ${STARPHLEET_ROOT:-/var/starphleet}/nginx
set -e
make
set +e
popd

#we will be using bash. period
rm /bin/sh
ln /bin/bash /bin/sh

#starphleet lives here
[ -d ${STARPHLEET_ROOT} ] || mkdir -p ${STARPHLEET_ROOT}
[ -d ${STARPHLEET_TMP} ] || mkdir -p ${STARPHLEET_TMP}
chmod 755 ${STARPHLEET_ROOT}
[ -d ${STARPHLEET_ROOT}/diagnostic ] || mkdir -p ${STARPHLEET_ROOT}/diagnostic
chmod 755 ${STARPHLEET_ROOT}/diagnostic

#make a place for keys
test -d ${PRIVATE_KEYS} || mkdir -p ${PRIVATE_KEYS}
chmod 755 ${PRIVATE_KEYS}
test -d ${PUBLIC_KEYS} || mkdir -p ${PUBLIC_KEYS}
chmod 755 ${PUBLIC_KEYS}
#force install private and public keys from local vagrant image
if find /starphleet/private_keys/* > /dev/null ; then
  [ -d "${PRIVATE_KEYS}" ] && cp /starphleet/private_keys/* "${PRIVATE_KEYS}"
fi
if find /starphleet/public_keys/* > /dev/null ; then
  [ -d "${PUBLIC_KEYS}" ] && cp /starphleet/public_keys/* "${PUBLIC_KEYS}"
fi

#allow passwordless sudoers
cat > ${ROOT}/etc/sudoers <<'EOF'
Defaults	env_reset
Defaults	mail_badpass
Defaults	secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
root	ALL=(ALL:ALL) ALL
%admin ALL=(ALL) ALL
%sudo	ALL=(ALL:ALL) NOPASSWD:ALL
vagrant ALL=NOPASSWD: ALL
Defaults env_keep="sSH_AUTH_SOCK"
Defaults !requiretty
EOF

starphleet-buildpacks

#making base containers as needed, base container serves as the source for
#and we clone the service container on top, the idea is the base container
#can be re-used and thus improve build time
${DIR}/starphleet-build-base-container

starphleet-cleanup
start starphleet
announce *Welcome to Starphleet*
