# vim: set ft=sh : #main include file for starphleet scripts
export version=0.0.1
export PORT=3000
export LXC_ROOT="/var/lib/lxc"
export STARPHLEET_PULSE="5"
export STARPHLEET_DRAINSTOP_WAIT="30"
export STARPHLEET_ROOT="/var/starphleet"
export STARPHLEET_PORTS="/var/starphleet/ports"
export STARPHLEET_PUBLISH_PORTS="/var/starphleet/publish_ports"
export STARPHLEET_TMP="/var/starphleet/tmp"
export STARPHLEET_CACHE="/var/starphleet/cache"
export STARPHLEET_CPU_STATS="/var/starphleet/.cpustats"
export STARPHLEET_STATUS="/var/starphleet/.status"
export HEADQUARTERS_SOURCE="/var/starphleet/.headquarters"
export HEADQUARTERS_LOCAL="/var/starphleet/headquarters"
export HEADQUARTERS_ENV="/var/starphleet/headquarters/.starphleet"
export SHIPS="${HEADQUARTERS_LOCAL}/ships"
export SHIP_SCRIPTS="${HEADQUARTERS_LOCAL}/shipscripts"
export CURRENT_ORDERS="/var/starphleet/current_orders"
export PRIVATE_KEYS="/var/starphleet/private_keys"
export PUBLIC_KEYS="/var/starphleet/public_keys"
export NGINX_CONF="/var/starphleet/nginx"
export BUILDPACKS="/var/starphleet/buildpacks"
export ADMIRAL="admiral"
export ADMIRAL_HOME="/home/admiral"
export MAX_OPEN_FILES="4096"
if [ "${TERM}" == "unknown" ]; then
  export TERM="xterm-256color"
fi
export TAILOR_REMOTE="git+https://github.com/wballard/tailor.git"
export DASHBOARD_REMOTE="git+https://github.com/wballard/starphleet.dashboard.git"
export NPM_FLAGS=""
export SHIP=ship-$(ssh-keygen -lf /etc/ssh/ssh_host_rsa_key.pub | awk '{ print $2; }' | sed -e 's/://g')
export STARPHLEET_APP_USER="ubuntu"

ulimit -n ${MAX_OPEN_FILES}

#Library of colorized logging functions, just source this
function error() {
  echo -e  '\E[31m'"\033[1m$*\033[0m"
}

function announce() {
  echo -e  '\E[34m'"\033[1m$*\033[0m"
}

function fatal() {
  echo -e  '\E[31m'"\033[1m$*\033[0m"
  exit 1
}

function trace() {
  echo -e  '\E[35m'"\033[1m$*\033[0m"
}

function info() {
  echo -e  '\E[32m'"\033[1m$*\033[0m"
}

function warn() {
  echo -e  '\E[33m'"\033[1m$*\033[0m"
}

function log() {
  echo -e "$*"
}

function code() {
  echo -e "CODE$*"
  exit $*
}

#get the current sha for a given git repository
function get_CURRENT_SHA() {
  export CURRENT_SHA=$(git --git-dir "$1/.git" --work-tree "$1" rev-parse HEAD)
}

function get_SHASUM() {
  export SHASUM=$(sha1sum "${1}" | awk '{ print substr($1,1,7); }')
}

function get_HASH() {
  export HASH=$(echo $1 | sha1sum | awk '{ print $1; }')
}

function get_CONTAINER_NAME() {
  export CONTAINER_NAME="$(echo $1 | sha1sum | awk '{print $1;}').orders"
}

function autodeploy() {
  export AUTODEPLOY="${1}"
}

function get_RANDOM_MAC_ADDRESS() {
  range=255
  for i in {1..6}
  do
    number=$RANDOM
    let "number %= $range"
    segment[$i]=$(echo "obase=16;$number" | bc)
  done
  export RANDOM_MAC_ADDRESS="${segment[1]}:${segment[2]}:${segment[3]}:${segment[4]}:${segment[5]}:${segment[6]}"
}

function run_ship_scripts() {
  if [ -d "${SHIP_SCRIPTS}" ]; then
    for file in $(find "${SHIP_SCRIPTS}") ; do
      if [ -x $file ] && [ -f $file ]; then
        #no crashing allowed for these
        $file || true
      fi
    done
  fi
}

function make_admiral() {
  useradd ${ADMIRAL} -m -d ${ADMIRAL_HOME}
  adduser ${ADMIRAL} sudo
  test -d ${ADMIRAL_HOME}/.ssh || mkdir -p ${ADMIRAL_HOME}/.ssh
  mkdir -p ${STARPHLEET_ROOT}
  chown -R ${ADMIRAL}:${ADMIRAL} ${STARPHLEET_ROOT}
  chown -R ${ADMIRAL}:${ADMIRAL} ${ADMIRAL_HOME}
  info admiral created
}

# environment, enforced by our buildpack script, so the preference order is:
# * repository specific variables, basically our dev settings
# * headquarters/.../orders variables, service level overrides
# * headquarters/.starphleet variables, global overrides
[ -f "${HEADQUARTERS_SOURCE}" ] && source "${HEADQUARTERS_SOURCE}"
[ -f "/${CHECKOUT_PATH}/.env" ] && source "/${CHECKOUT_PATH}/.env"
[ -f "${HOME}/app/.env" ] && source "${HOME}/app/.env"
[ -f "/.orders" ] && source "/.orders"
[ -f "${HEADQUARTERS_ENV}" ] && source "${HEADQUARTERS_ENV}"
[ -f "/.starphleet" ] && source "/.starphleet"
: