# vi: ft=nginx ts=2 et sw=2 sts=2 :

worker_processes  4;
daemon off;

error_log  /dev/stdout;
pid        /var/run/starphleet_nginx.pid;
worker_rlimit_nofile 20000;

events {
  worker_connections  10000;
}

http {
  include    mime.conf;
  include    proxy.conf;
  variables_hash_bucket_size 128;

  default_type application/octet-stream;
  log_format   main   '$time_iso8601 $remote_addr '
                      '$request_method "$request_uri" $server_protocol '
                      '$http_referer "$http_user_agent" "$http_x_forwarded_for" '
                      '$host "$upstream_addr" $status $request_length $body_bytes_sent $request_time';
  access_log   /var/log/upstart/starphleet_access.log main;
  sendfile     on;
  keepalive_timeout  0;
  tcp_nopush   on;

  ssl_certificate      published/crt;
  ssl_certificate_key  published/key;

  proxy_cache_path "/var/cache/nginx" levels=1 keys_zone=primary_zone:15m;
  proxy_cache_path "/var/cache/nginx_aggressive" levels=1 keys_zone=aggressive_zone:15m inactive=36h;

  include ldap_servers/*.conf;
  auth_ldap_cache_enabled on;
  auth_ldap_cache_expiration_time 28800000;
  auth_ldap_cache_size 1024;
  include beta_groups/*.conf;
  include acl_rules/*.conf;

  #lua-resty-jwt is required when starphleet secures sites via JWT
  lua_package_path "/var/starphleet/nginx/lua-resty-hmac/lib/?.lua;/var/starphleet/nginx/lua-resty-string-0.09/lib/?.lua;/var/starphleet/nginx/lua-resty-jwt-0.1.2/lib/?.lua;/var/starphleet/nginx/lua/?.lua;;";
  lua_package_cpath "/usr/local/lib/lua/luajit-2.0/?.so;;";

  server {
    listen 80;
    listen 443 ssl spdy;
    large_client_header_buffers 4 32k;

    #all the beta rewrites
    include published/*.beta;

    #Access Control Lists
    include published/*.acl;

    #Status URL
    include published/*.status;

    #redirect Urls
    include published/*.redirect;

    #dynamic server urls
    include published/*.conf;
  }

  include /etc/starphleet_nginx/*.conf;

  include published_bare/*.conf;

  include proxy_for/*.conf;
  include named_servers/*.conf;
}
